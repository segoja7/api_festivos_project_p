apiVersion: batch/v1
kind: Job
metadata:
  name: db-complete-setup
  namespace: festivos-api
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: db-setup
        image: postgres:17-alpine
        env:
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: DB_HOST
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: DB_PORT
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: DB_USERNAME
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: DB_PASSWORD
        - name: PGDATABASE
          value: "arquitectura_db"
        command:
        - /bin/bash
        - -c
        - |
          echo "üöÄ Setup completo de base de datos..."
          
          # Esperar a que la base de datos est√© disponible
          until pg_isready -h $PGHOST -p $PGPORT -U $PGUSER; do
            echo "Esperando PostgreSQL..."
            sleep 2
          done
          
          echo "‚úÖ PostgreSQL listo!"
          
          # PASO 1: Limpieza completa
          echo "üßπ Limpieza completa de la base de datos..."
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "
          DROP TABLE IF EXISTS festivo CASCADE;
          DROP TABLE IF EXISTS tipo CASCADE;
          DROP TABLE IF EXISTS pais CASCADE;
          DROP TABLE IF EXISTS cambiomoneda CASCADE;
          DROP TABLE IF EXISTS moneda CASCADE;
          DROP TABLE IF EXISTS usuario CASCADE;
          DROP SEQUENCE IF EXISTS festivo_id_seq CASCADE;
          DROP SEQUENCE IF EXISTS tipo_id_seq CASCADE;
          DROP SEQUENCE IF EXISTS pais_id_seq CASCADE;
          DROP SEQUENCE IF EXISTS secuencia_pais CASCADE;
          DROP SEQUENCE IF EXISTS secuencia_tipo CASCADE;
          "
          
          echo "‚úÖ Base de datos limpia!"
          
          # PASO 2: Crear tablas con scripts originales
          echo "üèóÔ∏è Creando tablas con scripts originales..."
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "
          --Crear la secuencia para TIPO
          CREATE SEQUENCE secuencia_tipo START 1;

          --Crear la tabla TIPO
          CREATE TABLE Tipo(
            Id INT PRIMARY KEY DEFAULT nextval('secuencia_tipo'),
            Tipo VARCHAR(100) NOT NULL
          );

          --Crear la secuencia para PAIS
          CREATE SEQUENCE secuencia_pais START 1;

          --Crear la tabla PAIS
          CREATE TABLE Pais(
            Id INT PRIMARY KEY DEFAULT nextval('secuencia_pais'),
            Nombre VARCHAR(100) NOT NULL
          );

          --Crear la tabla FESTIVO
          CREATE TABLE Festivo(
            Id SERIAL PRIMARY KEY,
            IdPais INT NOT NULL,
            CONSTRAINT fkFestivo_Pais FOREIGN KEY (IdPais) REFERENCES Pais(Id),
            Nombre VARCHAR(100) NOT NULL,
            Dia INT NOT NULL,
            Mes INT NOT NULL,
            DiasPascua INT NOT NULL,
            IdTipo INT NOT NULL,
            CONSTRAINT fkFestivo_Tipo FOREIGN KEY (IdTipo) REFERENCES Tipo(Id)
          );
          "
          
          echo "‚úÖ Tablas creadas!"
          
          # PASO 3: Insertar datos
          echo "üìù Insertando datos..."
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -f /scripts/dml-festivos.sql
          
          echo "üéâ Setup completado!"
          
          # PASO 4: Verificar datos
          echo "üîç Verificando datos insertados:"
          echo "Total de tipos:"
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "SELECT COUNT(*) FROM Tipo;"
          echo "Total de pa√≠ses:"
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "SELECT COUNT(*) FROM Pais;"
          echo "Total de festivos:"
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "SELECT COUNT(*) FROM Festivo;"
          
          echo "Festivos de Colombia (primeros 5):"
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d arquitectura_db -c "SELECT f.Nombre, f.Dia, f.Mes FROM Festivo f WHERE f.IdPais = 1 LIMIT 5;"
          
          echo "‚úÖ Base de datos completamente configurada!"
        volumeMounts:
        - name: sql-scripts
          mountPath: /scripts
          readOnly: true
      volumes:
      - name: sql-scripts
        configMap:
          name: sql-scripts-original
  backoffLimit: 1
