version: 0.2

phases:
  install:
    commands:
      - echo "Installing jq..."
      - yum install -y jq

  pre_build:
    commands:
      - echo "Logging in to Docker Hub..."
      - DOCKERHUB_CREDENTIALS=$(aws secretsmanager get-secret-value --secret-id "$DOCKERHUB_SECRET_ARN" --query SecretString --output text)
      - DOCKERHUB_USERNAME=$(echo $DOCKERHUB_CREDENTIALS | jq -r .username)
      - DOCKERHUB_PASSWORD=$(echo $DOCKERHUB_CREDENTIALS | jq -r .password)
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

      - echo "Docker version:"
      - docker --version
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Repository URI = $REPOSITORY_URI"
      - echo "Image tag = $IMAGE_TAG"
      - echo "Build started on `date`"
  
  build:
    commands:
      - echo "Build phase started on `date`"
      - echo "Building the Docker image..."
      - cd TT_ANI_apiFestivos
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo "Docker image built successfully"
  
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker images..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo "Docker images pushed successfully"
      - echo "Writing image definitions file..."
      - printf '[{"name":"festivos-api","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Creating build info file..."
      - printf '{"image_uri":"%s","image_tag":"%s","commit_hash":"%s","build_time":"%s"}' $REPOSITORY_URI:$IMAGE_TAG $IMAGE_TAG $COMMIT_HASH "$(date)" > build-info.json
      - cat build-info.json

artifacts:
  files:
    - imagedefinitions.json
    - build-info.json
    - k8s/**/*
    - terragrunt/resources/ci-cd/codepipeline/buildspecs/buildspec-deploy.yml
  name: BuildArtifact